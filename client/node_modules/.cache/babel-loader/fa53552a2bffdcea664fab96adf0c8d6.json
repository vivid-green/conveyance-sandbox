{"ast":null,"code":"import _regeneratorRuntime from \"/Users/christianboswell/Desktop/cli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/christianboswell/Desktop/cli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/christianboswell/Desktop/cli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianboswell/Desktop/cli/client/src/pages/ViewTodos.jsx\";\n\nimport React, { useEffect } from 'react';\nimport { useGlobalContext } from '../utils/GlobalContext';\n\nvar ViewTodos = function ViewTodos() {\n  var _useGlobalContext = useGlobalContext(),\n      _useGlobalContext2 = _slicedToArray(_useGlobalContext, 2),\n      state = _useGlobalContext2[0],\n      dispatch = _useGlobalContext2[1];\n\n  console.log({\n    state\n  });\n  useEffect(function () {\n    function fetchTodos() {\n      return _fetchTodos.apply(this, arguments);\n    }\n\n    function _fetchTodos() {\n      _fetchTodos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch('/api/todo');\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                json = _context.sent;\n                console.log({\n                  json\n                });\n                dispatch({\n                  type: 'setTodos',\n                  payload: json.data\n                });\n                console.log({\n                  state\n                });\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.log({\n                  err: _context.t0\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n      return _fetchTodos.apply(this, arguments);\n    }\n\n    fetchTodos(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Todos\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Todos-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Current Todos\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"Todos-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, state.todos.map(function (todo) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: todo._id,\n      className: \"Todos-listItem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, todo.content));\n  })));\n};\n\nexport default ViewTodos;","map":{"version":3,"sources":["/Users/christianboswell/Desktop/cli/client/src/pages/ViewTodos.jsx"],"names":["React","useEffect","useGlobalContext","ViewTodos","state","dispatch","console","log","fetchTodos","fetch","response","json","type","payload","data","err","todos","map","todo","_id","content"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,0BACID,gBAAgB,EADpB;AAAA;AAAA,MACfE,KADe;AAAA,MACRC,QADQ;;AAEtBC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA;AAAF,GAAZ;AAGAH,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCO,UADD;AAAA;AAAA;;AAAA;AAAA,6EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE2BC,KAAK,CAAC,WAAD,CAFhC;;AAAA;AAEUC,gBAAAA,QAFV;AAAA;AAAA,uBAGuBA,QAAQ,CAACC,IAAT,EAHvB;;AAAA;AAGUA,gBAAAA,IAHV;AAIIL,gBAAAA,OAAO,CAACC,GAAR,CAAY;AAAEI,kBAAAA;AAAF,iBAAZ;AAEAN,gBAAAA,QAAQ,CAAC;AAAEO,kBAAAA,IAAI,EAAE,UAAR;AAAoBC,kBAAAA,OAAO,EAAEF,IAAI,CAACG;AAAlC,iBAAD,CAAR;AACAR,gBAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,kBAAAA;AAAD,iBAAZ;AAPJ;AAAA;;AAAA;AAAA;AAAA;AASIE,gBAAAA,OAAO,CAACC,GAAR,CAAY;AAAEQ,kBAAAA,GAAG;AAAL,iBAAZ;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAcdP,IAAAA,UAAU,GAdI,CAed;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,wBACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAmB,MAAA,SAAS,EAAC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,OADR,CADF,CADmB;AAAA,GAApB,CADH,CAFF,CADF;AAcD,CArCD;;AAuCA,eAAejB,SAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useGlobalContext } from '../utils/GlobalContext';\n\nconst ViewTodos = () => {\n  const [state, dispatch] = useGlobalContext();\n  console.log({ state });\n\n\n  useEffect(() => {\n    async function fetchTodos() {\n      try {\n        const response = await fetch('/api/todo');\n        const json = await response.json();\n        console.log({ json });\n\n        dispatch({ type: 'setTodos', payload: json.data });\n        console.log({state});\n      } catch (err) {\n        console.log({ err });\n      }\n    }\n\n    fetchTodos();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"Todos\">\n      <h3 className=\"Todos-header\">Current Todos</h3>\n      <ul className=\"Todos-list\">\n        {state.todos.map(todo => (\n          <li key={todo._id} className=\"Todos-listItem\">\n            <span>\n              {todo.content}\n            </span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ViewTodos;"]},"metadata":{},"sourceType":"module"}
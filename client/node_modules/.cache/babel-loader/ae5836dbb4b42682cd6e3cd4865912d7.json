{"ast":null,"code":"import _regeneratorRuntime from \"/Users/christianboswell/Desktop/cli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/christianboswell/Desktop/cli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/christianboswell/Desktop/cli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianboswell/Desktop/cli/client/src/pages/AddTodo.jsx\";\n\nimport React, { useState } from 'react';\nimport { useGlobalContext } from '../utils/GlobalContext';\n\nvar AddTodo = function AddTodo() {\n  var _useGlobalContext = useGlobalContext(),\n      _useGlobalContext2 = _slicedToArray(_useGlobalContext, 2),\n      dispatch = _useGlobalContext2[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoValue = _useState2[0],\n      setTodoValue = _useState2[1];\n\n  var addTodo = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch('/api/todo', {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  text: todoValue\n                }),\n                method: 'POST'\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              json = _context.sent;\n              dispatch({\n                type: 'addTodo',\n                payload: json.data\n              });\n              setTodoValue('');\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    }));\n\n    return function addTodo(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Add a new todo!\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"todo\",\n    value: todoValue,\n    onChange: function onChange(e) {\n      return setTodoValue(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Add Todo\")));\n};\n\nexport default AddTodo;","map":{"version":3,"sources":["/Users/christianboswell/Desktop/cli/client/src/pages/AddTodo.jsx"],"names":["React","useState","useGlobalContext","AddTodo","dispatch","todoValue","setTodoValue","addTodo","e","preventDefault","fetch","headers","body","JSON","stringify","text","method","response","json","type","payload","data","console","log","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,0BACCD,gBAAgB,EADjB;AAAA;AAAA,MACXE,QADW;;AAAA,kBAEcH,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,MAEbI,SAFa;AAAA,MAEFC,YAFE;;AAIpB,MAAMC,OAAO;AAAA,wEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdA,cAAAA,CAAC,CAACC,cAAF;AADc;AAAA;AAAA,qBAGWC,KAAK,CAC1B,WAD0B,EAE1B;AACEC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBADX;AAIEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,kBAAAA,IAAI,EAAEV;AAAR,iBAAf,CAJR;AAKEW,gBAAAA,MAAM,EAAE;AALV,eAF0B,CAHhB;;AAAA;AAGNC,cAAAA,QAHM;AAAA;AAAA,qBAaOA,QAAQ,CAACC,IAAT,EAbP;;AAAA;AAaNA,cAAAA,IAbM;AAeZd,cAAAA,QAAQ,CAAC;AAAEe,gBAAAA,IAAI,EAAE,SAAR;AAAmBC,gBAAAA,OAAO,EAAEF,IAAI,CAACG;AAAjC,eAAD,CAAR;AACAf,cAAAA,YAAY,CAAC,EAAD,CAAZ;AAhBY;AAAA;;AAAA;AAAA;AAAA;AAkBZgB,cAAAA,OAAO,CAACC,GAAR;;AAlBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPhB,OAAO;AAAA;AAAA;AAAA,KAAb;;AAsBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAM,IAAA,QAAQ,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEF,SAHT;AAIE,IAAA,QAAQ,EAAE,kBAACG,CAAD;AAAA,aAAOF,YAAY,CAACE,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAnB;AAAA,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAFF,CADF;AAcD,CAxCD;;AA0CA,eAAetB,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useGlobalContext } from '../utils/GlobalContext';\n\nconst AddTodo = () => {\n  const [, dispatch] = useGlobalContext();\n  const [todoValue, setTodoValue] = useState('');\n\n  const addTodo = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        '/api/todo',\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ text: todoValue }),\n          method: 'POST',\n        }\n      );\n      const json = await response.json();\n\n      dispatch({ type: 'addTodo', payload: json.data });\n      setTodoValue('');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Add a new todo!</h3>\n      <form onSubmit={addTodo}>\n        <input\n          type=\"text\"\n          name=\"todo\"\n          value={todoValue}\n          onChange={(e) => setTodoValue(e.target.value)}\n        />\n        <button>Add Todo</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddTodo;"]},"metadata":{},"sourceType":"module"}
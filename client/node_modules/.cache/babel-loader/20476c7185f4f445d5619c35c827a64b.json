{"ast":null,"code":"import _slicedToArray from \"/Users/christianboswell/Desktop/cli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/christianboswell/Desktop/cli/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianboswell/Desktop/cli/client/src/utils/GlobalContext.js\";\n\nimport { createContext, useContext, useReducer } from 'react'; // set up our global context\n\nexport var GlobalContext = createContext(); // set up Global Provider & reducer\n\nvar defaultState = {\n  todos: []\n};\n\nvar reducer = function reducer(state, action) {\n  console.log({\n    action\n  });\n\n  switch (action.type) {\n    case 'setTodos':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todos: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar GlobalProvider = function GlobalProvider(props) {\n  var _useReducer = useReducer(reducer, defaultState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default GlobalProvider;\nexport var useGlobalContext = function useGlobalContext() {\n  return useContext(GlobalContext);\n};","map":{"version":3,"sources":["/Users/christianboswell/Desktop/cli/client/src/utils/GlobalContext.js"],"names":["createContext","useContext","useReducer","GlobalContext","defaultState","todos","reducer","state","action","console","log","type","payload","GlobalProvider","props","dispatch","useGlobalContext"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD,C,CAEA;;AACA,OAAO,IAAMC,aAAa,GAAGH,aAAa,EAAnC,C,CAEP;;AACA,IAAMI,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;;AACA,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,UAAL;AACE,6CACKJ,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAFhB;;AAIF;AACE,aAAOL,KAAP;AAPJ;AASD,CAXD;;AAaA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA,oBACNZ,UAAU,CAACI,OAAD,EAAUF,YAAV,CADJ;AAAA;AAAA,MACzBG,KADyB;AAAA,MAClBQ,QADkB;;AAGhC,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACR,KAAD,EAAQQ,QAAR;AAA/B,KAAsDD,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,CAND;;AASA,eAAeD,cAAf;AAEA,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,SAAOf,UAAU,CAACE,aAAD,CAAjB;AACD,CAFM","sourcesContent":["import { createContext, useContext, useReducer } from 'react';\n\n// set up our global context\nexport const GlobalContext = createContext();\n\n// set up Global Provider & reducer\nconst defaultState = {\n  todos: []\n};\n\nconst reducer = (state, action) => {\n  console.log({action});\n  switch(action.type) {\n    case 'setTodos':\n      return {\n        ...state,\n        todos: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nconst GlobalProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  return (\n    <GlobalContext.Provider value={[state, dispatch]} {...props} />\n  );\n};\n\n\nexport default GlobalProvider;\n\nexport const useGlobalContext = () => {\n  return useContext(GlobalContext);\n};\n"]},"metadata":{},"sourceType":"module"}